version: '3.8'

services:
  mongo1:
    container_name: mongo1
    image: mongo
    # depends_on:
    #   - mongo-keyfile-setup
    # environment:
    #   MONGO_INITDB_ROOT_USERNAME: admin
    #   MONGO_INITDB_ROOT_PASSWORD: admin@123
    #   MONGO_INITDB_DATABASE: restaurant_db
    volumes:
      - mongo-data1:/data/db
      - ./rs-init.sh:/data/rs-init.sh
      # - ./auth/keyfile.txt:/data/keyfile.txt
    networks:
      - mongors-network
    ports:
      - 27021:27021
    restart: always
    entrypoint: "mongod --bind_ip_all --replSet dbrs --port 27021"
    # entrypoint: >
    #    bash -c "chmod 600 /data && mongod && sleep 10 && mongosh --eval '
    #     use admin
    #     db.createUser(
    #       {
    #         user: "siteAdmin",
    #         pwd: "admin333",
    #         roles: [ { role: "userAdminAnyDatabase", db: "admin" } ]
    #       }
    #     );
    #     db.createUser(
    #       {
    #         user: "siteRoot",
    #         pwd: "root333",
    #         roles: [ { role: "root", db: "admin" } ]
    #       }
    #     );\n'
    #     && mongod --bind_ip_all --replSet dbrs --port 27021 --keyFile /data/keyfile.txt"
  mongo2:
    container_name: mongo2
    image: mongo
    volumes:
      - mongo-data2:/data/db
      - ./auth/keyfile.txt:/data/keyfile.txt
    networks:
      - mongors-network
    ports:
      - 27022:27022
    restart: always
    entrypoint: "mongod --bind_ip_all --replSet dbrs --port 27022"
  mongo3:
    container_name: mongo3
    image: mongo
    volumes:
      - mongo-data3:/data/db
      - ./auth/keyfile.txt:/data/keyfile.txt
    networks:
      - mongors-network
    ports:
      - 27023:27023
    restart: always
    entrypoint: "mongod --bind_ip_all --replSet dbrs --port 27023"
networks:
  mongors-network:
    driver: bridge

volumes:
  mongo-data1:
  mongo-data2:
  mongo-data3: